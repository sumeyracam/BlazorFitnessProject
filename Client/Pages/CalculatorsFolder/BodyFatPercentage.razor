@page "/BodyFatPercentageCalculator"
@using Blazorapp.Shared.Models
@using Blazorapp.Client.Pages.Enums

<style>
body { background-image: url("https://i.hizliresim.com/zMU5cn.jpg"); 
       background-repeat: no-repeat; 
       background-size: 100% 100%; 
       background-position-x: right 32px; }
</style>


<div id="calories-content">

    <div id="maintenance-calculator" class="calculator">

        <div class="flex-container">
            <label for="Height">Height</label>
            <input type="range" min="80" max="240" step="0,5" class="slider" @bind-value="BFP.Height" />
            <p>@BFP.Height</p>
        </div>

        <div class="flex-container">
            <label for="Weight">Weight</label>
            <input type="range" min="30" max="150" step="0,5" class="slider" @bind-value="BFP.Weight"  />
            <p>@BFP.Weight</p>
        </div>

        <div class="flex-container">
            <label for="Age">Age</label>
            <input type="range" min="18" max="99" step="1" class="slider" @bind-value="BFP.Age" />
            <p>@BFP.Age</p>
        </div>

        <div class="flex-container">
            <label for="@BFP.Gender">Gender</label>
            <select @bind="@BFP.Gender" id="Gender">
                <option value="0"> Bir secenek seciniz</option>
                <option value="@((int)Gender.Male)">Male</option>
                <option value="@((int)Gender.Female)">Female</option>
            </select>
        </div>

        <p id="maintenance-message" style="color:@maintenanceMessageColor">@maintenanceMessage</p>

        <div class="flex-container">
            <label for="Result">Result</label>
            <input type="text" readonly id="Result" value="@BFP.Maintenance" />
        </div>

        <div class="flex-container">
            <button @onclick="() => Calculate()">Result</button>
        </div>

    </div>
</div>
@code { private const string green = "#1c7c00";
    private const string red = "#ff0000";

    private string maintenanceMessage = "";

    private string maintenanceMessageColor = "";

    private CaloricData BFP = new CaloricData();

    private void Calculate()
    {
        if (BFP.Weight > 0 && BFP.Height > 0 && BFP.Age > 0)
        {
            maintenanceMessageColor = green;
            maintenanceMessage = "";

            switch (BFP.Gender)
            {
                case (int)Enums.Gender.Male:

                    var maleResult = Math.Round((((BFP.Weight) / (BFP.Height * BFP.Height) * 1.20 - (0.23 * BFP.Age) - 16.2))*(-1)).ToString();
                    int.TryParse(maleResult, out int maleValue);
                    BFP.Maintenance = maleValue;
                    break;

                case (int)Enums.Gender.Female:
                    var femaleResult = Math.Round((((BFP.Weight) / (BFP.Height * BFP.Height) * 1.20 - (0.23 * BFP.Age) - 5.4))*(-1)).ToString();
                    int.TryParse(femaleResult, out int femaleValue);
                    BFP.Maintenance = femaleValue;

                    break;

                default:
                    break;
            }
        }
        else
        {
            maintenanceMessageColor = red;
            maintenanceMessage = "Invalid Inputs detected";
            BFP.Maintenance = 0;
        }
    }

   }